/**
 * Created by AnNid on 18.05.2014.
 */
var rufus = require('rufus');
rufus.addHandler(new rufus.handlers.Null());

var infologger = rufus.getLogger("info");
infologger.addHandler(new rufus.handlers.Rotating({
    file: global.basedir +'log/info.log',
    maxSize: 104857600,
    timeRate: 'daily',
    maxFiles: 50
}));

var actionLogger = rufus.getLogger("actions");
actionLogger.addHandler(new rufus.handlers.Rotating({
    file: global.basedir +'log/action.log',
    maxSize: 104857600,
    timeRate: 'daily',
    maxFiles: 50
}));

var errorLogger = rufus.getLogger("errors");
errorLogger.addHandler(new rufus.handlers.Rotating({
    file: global.basedir +'log/error.log',
    maxSize: 104857600,
    timeRate: 'daily',
    maxFiles: 50
}));

var serverLogger = rufus.getLogger("servers");
serverLogger.addHandler(new rufus.handlers.Rotating({
    file: global.basedir +'log/server.log',
    maxSize: 104857600,
    timeRate: 'daily',
    maxFiles: 50
}));

var connectionLogger = rufus.getLogger("connections");
connectionLogger.addHandler(new rufus.handlers.Rotating({
    file: global.basedir +'log/connection.log',
    maxSize: 104857600,
    timeRate: 'daily',
    maxFiles: 50
}));

var consoleLogger = rufus.getLogger("console");
consoleLogger.addHandler(new rufus.handlers.Console());

module.exports = {
    info: function(){
        infologger.info(arguments);
    },
    action: function(){
        actionLogger.info(arguments);
    },
    error: function(){
        errorLogger.error(arguments);
    },
    console: function(){
        consoleLogger.info(arguments);
    },
    serversInfo:  function(){
        serverLogger.info(arguments);
    },
    connectionsInfo:  function(){
        connectionLogger.info(arguments);
    },
    getSockInfo: function(sock){
        return {address: sock.remoteAddress +':'+ sock.remotePort, userId: sock.userId}
    }
};
