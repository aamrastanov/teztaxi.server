/**
 * Created by a.amrastanov on 08.09.2014.
 */

function getClientHandler(){
    return require('userHandler').clientHandler;
}
function getTaksistHandler(){
    return require('userHandler').taksistHandler;
}



function Order(data) {
    this.data = data;
    this.cost = 0;
    this.distance = 0;
}
Order.prototype.getClient = function(){
    return getClientHandler().getUserById(this.data.clientId);
};
Order.prototype.getTaksist = function(){
    return getTaksistHandler().getUserById(this.data.taksistId);
};
Order.prototype.setDistance = function(distance){
    this.distance = distance;
};
Order.prototype.saveDistance = function(){
    require('db').orderDB.saveDistance(this);
};


function OrderHandler(){
    this._ordersById = {};
    this.getOrderById = function(orderId){
        return this._ordersById[orderId];
    };
    this.getOrderByClient = function(client){
        var clientId = client.data.id;
        for (var orderId in this._ordersById) {
            var order = this._ordersById[orderId];
            if(order.data.clientId == clientId){
                return order;
            }
        }
    };
    this.getOrderByTaksist = function(taksist){
        var taksistId = taksist.data.id;
        for (var orderId in this._ordersById) {
            var order = this._ordersById[orderId];
            if(order.data.taksistId == taksistId){
                return order;
            }
        }
    };
    this.generateOrder = function(issueId, clientId, taksistId, cost){
        var orderData = {
            issueId: issueId,
            clientId: clientId,
            taksistId: taksistId,
            cost: cost,
            createDate: new Date()
        };
        require('db').orderDB.executeInsert(orderData, function(err, result){
            if (err){
                require('out').error('Order insert error', err, orderData);
            }
            else{
                orderData.id = result.insertId;
                var order = orderHandler.addOrder(orderData);
                var userHandler = require('userHandler');
                var client = userHandler.clientHandler.getUserById(orderData.clientId);
                client.setOrder(order);
                var taksist = userHandler.taksistHandler.getUserById(orderData.taksistId);
                taksist.setOrder(order);
                var actionHandler = require('actionHandler');
                actionHandler.serverActionHandler.doAction({
                    action:actionHandler.serverActionsValues.sendOrderToTaksist,
                    order: order,
                    taksist: taksist
                });
            }
        });
    };
    this.addOrder = function(orderData){
        var order = new Order(orderData);
        this._ordersById[orderData.id] = order;
        return order;
    };
    this.removeOrder = function(order){
        delete this._ordersById[order.data.id];
    };
    this.getAllOrders = function(){
        var orders = [];
        for (var orderId in orderHandler._ordersById){
            var order = orderHandler.getOrderById(orderId);
            orders.push(order);
        }
        return orders;
    }
}
var orderHandler = new OrderHandler();
module.exports = orderHandler;


