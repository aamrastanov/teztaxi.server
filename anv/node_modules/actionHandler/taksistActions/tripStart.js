/**
 * Created by a.amrastanov on 29.09.2014.
 */

module.exports = function(parameterMap){
    this.taksistToken = parameterMap.token;
    this.orderId = parameterMap.id;
    this.timestamp = parameterMap.timestamp;
    this.doAction = function(){
        var taksist = require('userHandler').taksistHandler.getUserByToken(this.taksistToken);
        taksist.updateState(require('userHandler').WORK_STATE.ON_TRIP);
        taksist.saveCoordinate();
        var order = require('orderHandler').getOrderById(this.orderId);
        if (order){
            var actionTime = new Date(this.timestamp);
            var client = order.getClient();
            if (client){
                client.updateState(require('userHandler').WORK_STATE.ON_TRIP, function(updatedUser){
                    var actionHandler = require('actionHandler');
                    actionHandler.serverActionHandler.doAction({
                        action:actionHandler.serverActionsValues.sendStateToClient,
                        client: updatedUser
                    });
                });
            }
            else{
                require('db').clientDB.getById(order.data.clientId, function (err, userData) {
                    if (err){
                        require('out').error('error on get user data', err, 'tripStart', order);
                    }
                    else{
                        var UserConstructor = require('userHandler').clientHandler.userConstructor;
                        var user = new UserConstructor(userData);
                        user.updateState(require('userHandler').WORK_STATE.ON_TRIP);
                    }
                });
            }
            require('db').orderActionDb.insertNewWithTime(order.data.id, require('db').ORDER_ACTIONS.TRIP_START, actionTime);
        }

    }
};