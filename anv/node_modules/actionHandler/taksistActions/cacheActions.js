/**
 * Created by Администратор on 10.01.2015.
 */


module.exports = function(parameterMap){
    this.taksistToken = parameterMap.token;
    this.actions = parameterMap.actions;
    this.doAction = function(){
        var actionsLastIndex = this.actions.length - 1;
        var orderHandler = require('orderHandler');
        var orderActionDb = require('db').orderActionDb;
        var taksistActionHandler = require('actionHandler').taksistActionHandler;
        var taksistActionsValues = require('actionHandler').taksistActionsValues;
        for(var index = 0; index <= actionsLastIndex; index++){
            var action = this.actions[index];
            var order = orderHandler.getOrderById(action.id);
            var actionTime = new Date(action.timestamp);
            if (action.action === taksistActionsValues.orderRefuse){
                if (order){
                    taksistActionHandler.doAction(action);
                }
                else{
                    orderActionDb.insertNewWithTime(action.id, require('db').ORDER_ACTIONS.TAKSIST_REFUSE, actionTime, action.reason);
                }
                return;
            }
            else if (action.action === taksistActionsValues.clientDontCome){
                if (order){
                    taksistActionHandler.doAction(action);
                }
                else{
                    orderActionDb.insertNewWithTime(action.id, require('db').ORDER_ACTIONS.CLIENT_DONT_COME, actionTime);
                }
                return;
            }
            else if (action.action === taksistActionsValues.arriveToClient){
                if (order && index === actionsLastIndex){
                    taksistActionHandler.doAction(action);
                }
                else{
                    orderActionDb.insertNewWithTime(action.id, require('db').ORDER_ACTIONS.ARRIVE_TO_CLIENT, actionTime);
                }
            }
            else if (action.action === taksistActionsValues.tripStart){
                if (order && index === actionsLastIndex){
                    taksistActionHandler.doAction(action);
                }
                else{
                    orderActionDb.insertNewWithTime(action.id, require('db').ORDER_ACTIONS.TRIP_START, actionTime);
                }
            }
            else if (action.action === taksistActionsValues.tripEnd){
                if (order){
                    taksistActionHandler.doAction(action);
                }
                else{
                    orderActionDb.insertNewWithTime(action.id, require('db').ORDER_ACTIONS.TRIP_END, actionTime);
                }
                return;
            }
        }
    }
};
