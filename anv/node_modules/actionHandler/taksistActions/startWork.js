/**
 * Created by a.amrastanov on 15.08.2014.
 */

module.exports = function(parameterMap){
    this.taksistToken = parameterMap.token;
    this.lat = parameterMap.lat;
    this.lon = parameterMap.lon;
    this.lang = parameterMap.lang;
    this.state = parameterMap.state;
    this.socketLastClosedTime = parameterMap.socketLastClosedTime;

    this.doAction = function(){

        var userHandler = require('userHandler');
        var taksist = userHandler.taksistHandler.getUserByToken(this.taksistToken);
        taksist.setCoordinate(this.lat, this.lon);
        taksist.setLang(this.lang);
        taksist.saveCoordinate();

        var actionHandler = require('actionHandler');
        if (this.state !== 0 && taksist.getOrder() === undefined){
            actionHandler.serverActionHandler.doAction({
                action:actionHandler.serverActionsValues.sendOrderRemoveToTaksist,
                taksist: taksist
            });
        }
        else if (this.state == 0 && taksist.data.state != 0){
            taksist.updateState(require('userHandler').WORK_STATE.START);
        }

        var issueHandler = require('issueHandler');
        var taksistShowRequestedUsers = userHandler.clientHandler.getTaksistsShowRequestedUsers();
        if (taksist.reconnectCount === 0){
            actionHandler.serverActionHandler.doAction({
                action:actionHandler.serverActionsValues.sendNewIssuesAndStateToTaksists,
                issues: issueHandler.getAllIssues(),
                taksists: [taksist],
                wasRemoved: 1
            });
            if (taksistShowRequestedUsers.length > 0){
                actionHandler.serverActionHandler.doAction({
                    action:actionHandler.serverActionsValues.sendTaksistsDataToClient,
                    clients: taksistShowRequestedUsers,
                    taksists: [taksist]
                });
            }
        }
        else{
            var issues = [];
            for (var issueId in issueHandler.issuesById){
                var issue = issueHandler.getIssueById(issueId);
                if (issue.data.createDate.getTime() > this.socketLastClosedTime){
                    issues.push(issue);
                }
            }
            actionHandler.serverActionHandler.doAction({
                action:actionHandler.serverActionsValues.sendNewIssuesAndStateToTaksists,
                issues: issues,
                taksists: [taksist],
                wasRemoved: 0
            });
        }
        var clients = taksist.getAllCoordinateRequestedClients();
        clients = clients.concat(taksistShowRequestedUsers);
        var order = taksist.getOrder();
        if (order){
            var orderClient = order.getClient();
            clients = clients.concat(orderClient);
        }
        if (clients.length > 0){
            var actionHandler = require('actionHandler');
            actionHandler.serverActionHandler.doAction({
                action:actionHandler.serverActionsValues.sendTaksistCoordinateToClient,
                taksists: [taksist],
                clients: clients
            });
        }
    }
};
