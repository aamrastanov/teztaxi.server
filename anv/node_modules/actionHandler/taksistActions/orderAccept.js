/**
 * Created by Администратор on 05.07.2014.
 */

module.exports = function(parameterMap){
    this.taksistToken = parameterMap.token;
    this.orderId = parameterMap.id;
    this.time = parameterMap.time;
    this.doAction = function(){
        var taksist = require('userHandler').taksistHandler.getUserByToken(this.taksistToken);
        taksist.saveCoordinate();
        var order = require('orderHandler').getOrderById(this.orderId);
        if (order){
            var actionHandler = require('actionHandler');
            actionHandler.serverActionHandler.doAction({
                action:actionHandler.serverActionsValues.sendOrderAcceptToClient,
                order: order,
                time:this.time
            });
            var issue = require('issueHandler').getIssueById(order.data.issueId);
            if (issue){
                actionHandler.serverActionHandler.doAction({
                    action:actionHandler.serverActionsValues.sendIssueRemoveToTaksists,
                    issue: issue
                });
                issue.removeUsers();
                require('db').issueActionDb.insertNew(issue.data.id, require('db').ISSUE_ACTIONS.END_BY_ORDER);
                require('issueHandler').removeIssue(issue);
            }
            require('db').orderActionDb.insertNew(order.data.id, require('db').ORDER_ACTIONS.TAKSIST_ACCEPT, this.time);
            taksist.updateState(require('userHandler').WORK_STATE.BEFORE_TRIP);
            var issues = taksist.getAllIssues();
            var clients = [];
            for (var index = 0; index < issues.length; index++){
                var issue = issues[index];
                issue.removeTaksist(taksist);
                clients.push(issue.getClient());
            }
            var actionHandler = require('actionHandler');
            actionHandler.serverActionHandler.doAction({action: actionHandler.serverActionsValues.sendTaksistRemoveToClient,
                taksist: taksist,
                clients: clients
            });
        }
    }
};