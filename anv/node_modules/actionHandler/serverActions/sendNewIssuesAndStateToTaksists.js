/**
 * Created by a.amrastanov on 06.08.2014.
 */

module.exports = function(parameterMap){
    this.action = parameterMap.action;
    this.issues = parameterMap.issues;
    this.taksists = parameterMap.taksists;
    this.wasRemoved = parameterMap.wasRemoved;
    this.doAction = function(){
        if (this.wasRemoved === undefined){
            this.wasRemoved = 0;
        }
        if (this.issues.length == 1){
            var issue = this.issues[0];
            var issueData = {
                id: issue.data.id,
                addressFrom: issue.data.addressFrom,
                addressTo: issue.data.addressTo,
                lat: issue.data.clientLat,
                lon: issue.data.clientLon,
                regionRelId: issue.data.regionRelId,
                orientation:{distance: issue.data.poiDistance},
                offeredPrice: issue.data.offeredPrice
            };
            for (var index=0; index < this.taksists.length; index++) {
                var taksist = this.taksists[index];
                var taksistLang = taksist.getLang();
                var poi = issue.getPoi();
                var orientationName = poi.name[taksistLang];
                if (orientationName === undefined ){
                    orientationName = poi.name['az'];
                }
                issueData.orientation.name = orientationName;
                var message = require('contextHandler').NewMessage(this.action, {issues: [issueData], wasRemoved: this.wasRemoved});
                taksist.send(message);
            }
        }
        else{
            var taksist = this.taksists[0];
            var taksistLang = taksist.getLang();
            var issueDatas = [];
            for (var index=0; index < this.issues.length; index++) {
                var issue = this.issues[index];
                var poi = issue.getPoi();
                var orientationName = poi.name[taksistLang];
                if (orientationName === undefined ){
                    orientationName = poi.name['az'];
                }
                var issueData = {
                    id: issue.data.id,
                    addressFrom: issue.data.addressFrom,
                    addressTo: issue.data.addressTo,
                    lat: issue.data.clientLat,
                    lon: issue.data.clientLon,
                    regionRelId: issue.data.regionRelId,
                    orientation:{name: orientationName, distance: issue.data.poiDistance}
                };
                issueDatas.push(issueData);
            }
            var message = require('contextHandler').NewMessage(this.action, {issues: issueDatas, wasRemoved: this.wasRemoved});
            taksist.send(message);
        }
    }
};
