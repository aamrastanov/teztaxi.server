/**
 * Created by a.amrastanov on 29.09.2014.
 */

module.exports = function(parameterMap){
    this.clientToken = parameterMap.token;
    this.doAction = function(){
        var client = require('userHandler').clientHandler.getUserByToken(this.clientToken);
        client.normalizeState(function(){
            var actionHandler = require('actionHandler');
            actionHandler.serverActionHandler.doAction({
                action:actionHandler.serverActionsValues.sendStateToClient,
                client: client
            });
            var userHandler = require('userHandler');
            var state = client.data.state;
            var WORK_STATE = userHandler.WORK_STATE;
            if (state == WORK_STATE.START){
                if (userHandler.clientHandler.isTaksistsShowRequestedUser(client)){
                    actionHandler.serverActionHandler.doAction({
                        action:actionHandler.serverActionsValues.sendTaksistsDataToClient,
                        clients: [client],
                        taksists: userHandler.taksistHandler.getAllUsers()
                    });
                }
            }
            else if (state == WORK_STATE.ON_ISSUE){
                var issue = client.getIssue();
                actionHandler.serverActionHandler.doAction({
                    action:actionHandler.serverActionsValues.sendTaksistsDataWithCostToClient,
                    client: client,
                    taksistAnswers: issue.getTaksistsWithCost()
                });
            }
            else if (state == WORK_STATE.BEFORE_TRIP || state == WORK_STATE.ON_TRIP){
                var order = client.getOrder();
                if (order){
                    var taksist = order.getTaksist();
                    if (taksist){
                        actionHandler.serverActionHandler.doAction({
                            action:actionHandler.serverActionsValues.sendTaksistCoordinateToClient,
                            taksists: [taksist],
                            clients: [client]
                        });
                    }
                    else if(state == WORK_STATE.BEFORE_TRIP){
                        actionHandler.serverActionHandler.doAction({
                            action: actionHandler.serverActionsValues.sendOrderedTaksistOfflineToClient,
                            client: client
                        });
                    }
                    if (state == WORK_STATE.ON_TRIP){
                        actionHandler.serverActionHandler.doAction({
                            action:actionHandler.serverActionsValues.sendTripDetailsToClient,
                            client: client,
                            order: order
                        });
                    }
                }
            }
        });
    }
};
